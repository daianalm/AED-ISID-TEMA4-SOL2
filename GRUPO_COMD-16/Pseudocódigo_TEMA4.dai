ALGORITMO XCOMMaterialReport

    // Constante
    CONST
        MAX_MATERIALS = 1000; // Se puede ajustar este valor.

    // Tipo de registro
    TIPO
        Material = REGISTRO
            codigo: CADENA[5];
            tecnologia: CARACTER;
            nombreClave: CADENA[30];
            cantidad: ENTERO;
            estado: CADENA[100];
        FIN REGISTRO

    // Declaración de variables
    VARIABLES
        materiales: ARREGLO[1..MAX_MATERIALS] DE Material;
        numMateriales: ENTERO;
        archivoEntrada: ARCHIVO DE TEXTO;
        linea, campo: CADENA;
        i, inicioCampo, finCampo, convertResult: ENTERO;
        tecnologiaFiltrada: CARACTER;
        codigoBuscado: CADENA;

    // Procedimiento para leer los materiales desde el archivo de entrada
    PROCEDIMIENTO LeerMateriales();
    INICIO
        // Abrir el archivo de entrada.
        ASIGNAR(archivoEntrada, 'datos_materiales.txt');
        RESET(archivoEntrada);

        // Inicializar la cantidad de materiales a cero.
        numMateriales := 0;

        // Leer los datos de cada material desde el archivo.
        REPETIR
            // Leer una línea del archivo.
            LEERLINEA(archivoEntrada, linea);

            // Dividir la línea en campos usando la coma como delimitador.
            inicioCampo := 1;
            PARA i DESDE 1 HASTA 5 HACER
                finCampo := POS(',', linea, inicioCampo);
                SI finCampo = 0 ENTONCES
                    finCampo := LONGITUD(linea) + 1;
                FIN SI

                campo := SUBCADENA(linea, inicioCampo, finCampo - inicioCampo);
                CASO i HACER
                    1: materiales[numMateriales + 1].codigo := campo;
                    2: materiales[numMateriales + 1].tecnologia := PRIMERCARACTER(campo);
                    3: materiales[numMateriales + 1].nombreClave := campo;
                    4: 
                    INICIO
                        // Verificamos si el campo cantidad está vacío y lo asumimos como cero.
                        SI campo = '' ENTONCES
                            materiales[numMateriales + 1].cantidad := 0;
                        SINO
                            VAL(campo, materiales[numMateriales + 1].cantidad, convertResult);
                            SI convertResult <> 0 ENTONCES
                                ESCRIBIR('Error en la cantidad del material ', materiales[numMateriales + 1].nombreClave);
                                SALIR; // Terminar el programa si hay un error
                            FIN SI
                        FIN SI
                    FIN;
                    5: materiales[numMateriales + 1].estado := campo;
                FIN CASO
                inicioCampo := finCampo + 1;
            FIN PARA

            // Incrementar la cantidad de materiales.
            numMateriales := numMateriales + 1;
        HASTA FINARCHIVO(archivoEntrada);

        // Cerrar el archivo.
        CERRAR(archivoEntrada);
    FIN PROCEDIMIENTO

    // Procedimiento para generar la secuencia de salida filtrando por tecnología
    PROCEDIMIENTO GenerarSecuenciaSalida(tecnologiaFiltrada: CARACTER);
    INICIO
        ESCRIBIR('Materiales de tecnología B:');
        PARA i DESDE 1 HASTA numMateriales HACER
            SI materiales[i].tecnologia = tecnologiaFiltrada ENTONCES
                ESCRIBIR('Código: ', materiales[i].codigo, ', Nombre Clave: ', materiales[i].nombreClave, ', Cantidad: ', materiales[i].cantidad);
            FIN SI
        FIN PARA
    FIN PROCEDIMIENTO

    // Procedimiento para informar la cantidad de materiales por tecnología
    PROCEDIMIENTO InformarCantidadPorTecnologia();
    INICIO
        // Inicializamos los contadores a cero.
        ENTERO cantB := 0;
        ENTERO cantL := 0;
        ENTERO cantP := 0;

        // Contamos los materiales de cada tecnología.
        PARA i DESDE 1 HASTA numMateriales HACER
            CASO materiales[i].tecnologia HACER
                'B': cantB := cantB + 1;
                'L': cantL := cantL + 1;
                'P': cantP := cantP + 1;
            FIN CASO
        FIN PARA

        // Mostramos los resultados por pantalla.
        ESCRIBIR('Cantidad de materiales de tecnología B: ', cantB);
        ESCRIBIR('Cantidad de materiales de tecnología L: ', cantL);
        ESCRIBIR('Cantidad de materiales de tecnología P: ', cantP);
    FIN PROCEDIMIENTO

    // Procedimiento para generar el archivo de salida filtrando por tecnología y código buscado
    PROCEDIMIENTO GenerarArchivoSalida(codigoBuscado: CADENA; tecnologiaFiltrada: CARACTER);
    INICIO
        ARCHIVO DE TEXTO archivoSalida;

        // Creamos el archivo de salida.
        ASIGNAR(archivoSalida, 'materiales_tipo_L_o_P.txt');
        REESCRIBIR(archivoSalida);

        // Recorremos los materiales y escribimos los de tecnología 'L' o 'P' con el código buscado.
        PARA i DESDE 1 HASTA numMateriales HACER
            SI (materiales[i].tecnologia = tecnologiaFiltrada) Y (materiales[i].codigo = codigoBuscado) ENTONCES
                ESCRIBIR(archivoSalida, materiales[i].nombreClave, ',', materiales[i].cantidad, ',', materiales[i].estado);
            FIN SI
        FIN PARA

        // Cerramos el archivo.
        CERRAR(archivoSalida);

        ESCRIBIR('Archivo de salida generado correctamente.');
    FIN PROCEDIMIENTO

    // Programa principal
    PROCESO Principal
    INICIO
        LeerMateriales();

        REPETIR
            // Solicitamos al usuario que ingrese la tecnología a filtrar ('L' o 'P')
            ESCRIBIR('Ingrese la tecnología a filtrar (L o P): ');
            LEER(tecnologiaFiltrada);

            // Validamos que la letra ingresada sea 'L' o 'P'
            SI (tecnologiaFiltrada <> 'L') Y (tecnologiaFiltrada <> 'P') ENTONCES
                ESCRIBIR('Error: La tecnología ingresada no es válida. Por favor, ingrese L o P.');
            FIN SI
        HASTA (tecnologiaFiltrada = 'L') O (tecnologiaFiltrada = 'P');

        // Mostramos los materiales de tecnología 'B' por pantalla
        GenerarSecuenciaSalida('B');

        // Informamos la cantidad de materiales por tecnología
        InformarCantidadPorTecnologia();

        // Generamos el archivo de salida con la tecnología y código buscado
        ESCRIBIR('Ingrese el código de "TECNOLOGÍA L" o "TECNOLOGÍA P" para el archivo de salida: ');
        LEER(codigoBuscado);
        GenerarArchivoSalida(codigoBuscado, tecnologiaFiltrada);

        // Esperamos a que el usuario presione Enter antes de terminar el programa.
        ESCRIBIR('Presione Enter para salir...');
        LEER;
        //Mensaje de despedida
        ESCRIBIR('GRACIAS');
        LEER;
    FIN PROCESO

FIN ALGORITMO