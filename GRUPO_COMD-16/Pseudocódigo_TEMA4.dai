Algoritmo XCOMMaterialReport

// Declaración de constantes y tipos de datos
const
  MAX_MATERIALS = 1000

tipo
  Material = Registro
    codigo: cadena(5)
    tecnologia: caracter
    nombreClave: cadena(30)
    cantidad: entero
    estado: cadena(100)
  Fin_Registro

arreglo
  materiales: [1..MAX_MATERIALS] de Material
  cantidadMateriales: entero // Cambio de "numMateriales" a "cantidadMateriales"

// Acción para leer los materiales desde el archivo
Accion LeerMateriales()
  archivoEntrada: Texto
  linea, campo: cadena
  i, inicioCampo, finCampo, convertResult, cantidadCampos: entero // Cambio de "numMateriales" a "cantidadMateriales"
Principio
  // Abrir el archivo de entrada
  Asignar(archivoEntrada, 'datos_materiales.txt')
  Abrir(archivoEntrada, Lectura)

  // Inicializar la cantidad de materiales a cero
  cantidadMateriales := 0 // Cambio de "numMateriales" a "cantidadMateriales"

  // Leer los datos de cada material desde el archivo
  Mientras no EsFinal(archivoEntrada) Hacer
    // Leer una línea del archivo
    LeerLinea(archivoEntrada, linea)

    // Dividir la línea en campos usando la coma como delimitador
    inicioCampo := 1
    cantidadCampos := 5 // Variable para contar la cantidad de campos en la línea
    Para i := 1 Hasta cantidadCampos Hacer
      finCampo := Encontrar(',', linea, inicioCampo)
      Si finCampo = 0 Entonces
        finCampo := Longitud(linea) + 1

      campo := Subcadena(linea, inicioCampo, finCampo - inicioCampo)
      Segun i Hacer
        1:
          materiales[cantidadMateriales + 1].codigo := campo
        2:
          materiales[cantidadMateriales + 1].tecnologia := Mayusculas(campo[1]) // Convertir a mayúsculas para evitar problemas con la validación
        3:
          materiales[cantidadMateriales + 1].nombreClave := campo
        4:
          // Verificamos si el campo cantidad está vacío y lo asumimos como cero
          Si campo = '' Entonces
            materiales[cantidadMateriales + 1].cantidad := 0
          Sino
            Val(campo, materiales[cantidadMateriales + 1].cantidad, convertResult)
            Si convertResult <> 0 Entonces
              Escribir('Error en la cantidad del material ', materiales[cantidadMateriales + 1].nombreClave)
              Salir // Terminar el programa si hay un error
            FinSi
          FinSi
        5:
          materiales[cantidadMateriales + 1].estado := campo
      FinSegun
      inicioCampo := finCampo + 1
    FinPara

    // Incrementar la cantidad de materiales
    cantidadMateriales := cantidadMateriales + 1
  FinMientras

  // Cerrar el archivo
  Cerrar(archivoEntrada)
FinAccion

// Acción para generar la secuencia de salida de acuerdo a la tecnología filtrada
Accion GenerarSecuenciaSalida(tecnologiaFiltrada: caracter)
  i: entero
Principio
  Escribir('Materiales de tecnología ', tecnologiaFiltrada, ':')
  Para i := 1 Hasta cantidadMateriales Hacer // Cambio de "numMateriales" a "cantidadMateriales"
    Si materiales[i].tecnologia = tecnologiaFiltrada Entonces
      Escribir('Nombre Clave: ', materiales[i].nombreClave, ', Cantidad: ', materiales[i].cantidad)
    FinSi
  FinPara
FinAccion


// Acción para mostrar los materiales de tecnología B
Accion MostrarMaterialesTecnologiaB()
  i: entero
Principio
  Escribir('Materiales de tecnología B:')
  Para i := 1 Hasta numMateriales Hacer
    Si materiales[i].tecnologia = 'B' Entonces
      Escribir('Nombre Clave: ', materiales[i].nombreClave, ', Cantidad: ', materiales[i].cantidad)
    FinSi
  FinPara
FinAccion

// Acción para informar la cantidad de materiales por tecnología
Accion InformarCantidadPorTecnologia()
  i, cantB, cantL, cantP: entero
Principio
  // Inicializamos los contadores a cero
  cantB := 0
  cantL := 0
  cantP := 0

  // Contamos los materiales de cada tecnología
  Para i := 1 Hasta numMateriales Hacer
    Segun materiales[i].tecnologia Hacer
      'B': cantB := cantB + 1
      'L': cantL := cantL + 1
      'P': cantP := cantP + 1
    FinSegun
  FinPara

  // Mostramos los resultados por pantalla
  Escribir('Cantidad de materiales de tecnología B: ', cantB)
  Escribir('Cantidad de materiales de tecnología L: ', cantL)
  Escribir('Cantidad de materiales de tecnología P: ', cantP)
FinAccion

// Acción para generar el archivo de salida
Accion GenerarArchivoSalida(codigoBuscado: cadena)
  archivoSalida: Texto
  i: entero
Principio
  Asignar(archivoSalida, 'materiales_tipo_L.txt')
  Reescribir(archivoSalida)

  Para i := 1 Hasta numMateriales Hacer
    Si (materiales[i].tecnologia = 'L') y (materiales[i].codigo = codigoBuscado) Entonces
      Escribir(archivoSalida, 'Nombre Clave: ', materiales[i].nombreClave)
      Escribir(archivoSalida, 'Cantidad: ', materiales[i].cantidad)
      Escribir(archivoSalida, 'Estado: ', materiales[i].estado)
      Escribir(archivoSalida, '-------------------')
    FinSi
  FinPara

  Cerrar(archivoSalida)
  Escribir('Archivo de salida generado correctamente.')
FinAccion

//Programa principal
Principio
  caracter codigoBuscado
  caracter tecnologiaFiltrada, continuar

  Repetir
    LeerMateriales()

    // Solicitamos al usuario que ingrese la tecnología 'P' o 'L'
    Repetir
      Escribir('Ingrese la tecnología a filtrar (P o L): ')
      LeerLn(tecnologiaFiltrada)

      // Validamos que solo se haya ingresado la letra 'P' o 'L'
      tecnologiaFiltrada := Mayusculas(tecnologiaFiltrada) // Convertimos a mayúscula para evitar problemas con la validación

      Si (tecnologiaFiltrada <> 'P') y (tecnologiaFiltrada <> 'L') Entonces
        Escribir('Error: La tecnología ingresada no es válida. Por favor, ingrese P o L.')
      FinSi
    Hasta (tecnologiaFiltrada = 'P') o (tecnologiaFiltrada = 'L')

    // Mostramos los materiales de tecnología 'B' por pantalla
    MostrarMaterialesTecnologiaB()

    // Mostramos los materiales de tecnología 'P' o 'L' por pantalla
    GenerarSecuenciaSalida(tecnologiaFiltrada)

    // Informamos la cantidad de materiales por tecnología
    InformarCantidadPorTecnologia()

    // Generamos el archivo de salida con el código de "TECNOLOGÍA L"
    Si tecnologiaFiltrada = 'L' Entonces
      Escribir('Ingrese el código de "TECNOLOGÍA L" para el archivo de salida: ')
      LeerLn(codigoBuscado)
      GenerarArchivoSalida(codigoBuscado)
    FinSi

    //Mensaje de despedida y preguntar si desea continuar
    Escribir('GRACIAS')
    Escribir('¿Desea consultar otra tecnología? (S/N)')
    LeerLn(continuar)
    continuar := Mayusculas(continuar)
  Hasta continuar <> 'S'

  // Mensaje de despedida final
  Escribir('¡Hasta luego!')
FinAlgoritmo
